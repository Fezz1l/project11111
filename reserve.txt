const express = require('express');
const bodyParser = require('body-parser');
const app = express();

app.use(bodyParser.json());

// Ролевая модель
const roles = {
  USER: 'user',
  ADMIN: 'admin',
  MODERATOR: 'moderator',
};

// Массив заявок
const applications = [];

// Массив отделов
const departments = ['HR', 'IT', 'Finance'];
// База пользователей (временно)
const users = [
    { username: 'user1', role: roles.USER, department: 'HR' },
    { username: 'admin1', role: roles.ADMIN, department: 'IT' },
    { username: 'moderator1', role: roles.MODERATOR, department: 'Finance' },
  ];

// Маршрут для отправки заявки
app.post('/apply', (req, res) => {
  const { username, role, department, description } = req.body;

  // Проверка наличия отдела в списке
  if (!departments.includes(department)) {
    return res.status(400).json({ error: 'Invalid department' });
  }

  applications.push({ username, role, department, description });
  res.json({ success: true });
});

// Маршрут для просмотра заявок
app.get('/view-applications', (req, res) => {
  const { role, department } = req.query;

  // Проверка роли пользователя
  if (role === roles.ADMIN) {
    // Показывать только заявки с соответствующим отделом
    const adminApplications = applications.filter(app => app.department === department);
    return res.json(adminApplications);
  } else if (role === roles.MODERATOR) {
    // Показывать все заявки для модератора
    return res.json(applications);
  } else if (role === roles.USER) {
    // Показывать только заявки пользователя
    const userApplications = applications.filter(app => app.role === roles.USER);
    return res.json(userApplications);
  } else {
    return res.status(400).json({ error: 'Invalid role' });
  }
});

function getUserDepartment(username) {
    const user = users.find(u => u.username === username);
    return user ? user.department : null;
}

// Обработчик корневого пути
app.get('/', (req, res) => {
    res.send('Welcome to the Role-based Application System');
  });
  
const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});